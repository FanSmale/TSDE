package coser.gui.dialog.numericis;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import coser.datamodel.informationsystem.*;
import coser.project.*;

import coser.gui.guicommon.*;
import coser.gui.dialog.common.*;

/**
 * Project: The cost-sensitive rough sets project.
 * <p>
 * Summary: Data Discretization.
 * <p>
 * Author: <b>Xu He</b> hexu_grclab@163.com <br>
 * Copyright: The source code and all documents are open and free. PLEASE keep
 * this header while revising the program. <br>
 * Organizaion: <a href=http://grc.fjzs.edu.cn/>Lab of Granular Computing</a>,
 * Zhangzhou Normal University, Fujian 363000, China.<br>
 * Progress: Almost done.<br>
 * Written time: September 23, 2012. <br>
 * Last modify time: September 23, 2012.
 */

public class DiscretizationDialog extends Dialog implements ActionListener {
	/**
	 * Serail UID.
	 */
	private static final long serialVersionUID = 4424791096804832585L;

	public static DiscretizationDialog DiscretizationDialog = new DiscretizationDialog();

	/**
	 * The type of file: arff.
	 */
	private JComboBox<String> outputFileTypeComboBox;

	/**
	 * The type of file: discretization algorithm.
	 */
	private JComboBox<String> overallAlgorithmComboBox;

	// private JComboBox subtypeComboBox;
	private ValueAreaOfk k;

	/**
	 *************************** 
	 * The only constructor.
	 *************************** 
	 */
	private DiscretizationDialog() {
		// This dialog is not module
		super(GUICommon.mainFrame, "Discretization data", true);

		k = new ValueAreaOfk("4");

		String[] typeFile = { "arff" };
		outputFileTypeComboBox = new JComboBox<String>(typeFile);
		outputFileTypeComboBox.setSelectedIndex(0);

		String[] typeFileForMethods = { "EqualWidth", "EqualFrequency" };
		overallAlgorithmComboBox = new JComboBox<String>(typeFileForMethods);
		overallAlgorithmComboBox.setSelectedIndex(0);

		Panel centerPanel = new Panel();
		centerPanel.setLayout(new GridLayout(3, 2));
		centerPanel.add(new Label("Interval division k: "));
		centerPanel.add(k);
		centerPanel.add(new Label("The type of output:"));
		centerPanel.add(outputFileTypeComboBox);
		centerPanel.add(new Label("The algorithm of discretization:"));
		centerPanel.add(overallAlgorithmComboBox);

		Button okButton = new Button("   OK  ");
		okButton.setSize(20, 10);
		okButton.addActionListener(this);
		DialogCloser dialogCloser = new DialogCloser(this);
		Button cancelButton = new Button(" Cancel ");
		cancelButton.addActionListener(dialogCloser);
		Button helpButton = new Button("  Help ");
		helpButton.setSize(20, 10);
		helpButton.addActionListener(new HelpDialog("New project",
				"coser/gui/dialog/numericis/DiscretizationHelp.txt"));
		Panel okPanel = new Panel();
		okPanel.add(okButton);
		okPanel.add(cancelButton);
		okPanel.add(helpButton);

		setLayout(new GridLayout(2, 1));
		add(centerPanel);
		add(okPanel);

		setBackground(GUICommon.MY_COLOR);
		setLocation(160, 160);
		setSize(500, 250);
		addWindowListener(dialogCloser);
		setVisible(false);
	}// Of constructor

	/**
	 *************************** 
	 * Read the arff file.
	 *************************** 
	 */
	public void actionPerformed(ActionEvent ae) {
		setVisible(false);
		String messageDetail = "Generated by Coser http://grc.fjzs.edu.cn/~fmin, minfanphd@163.com";
		messageDetail += "\r\nCoded by Xu He";
		messageDetail += "\r\nThe source filename: ";
		ProgressDialog.progressDialog
				.setMessageAndShow("Please wait a few seconds. Loading ... \r\n");
		String arffFilename = "unspecified";
		// try {
		// arffFilename = CoserProject.currentProject.currentRds
		// .getArffFilename();
		// messageDetail += arffFilename;
		// FileReader fileReader = new FileReader(arffFilename);
		// RoughDecisionSystem currentRds = new RoughDecisionSystem(fileReader);
		// currentRds.setClassIndex(currentRds.numAttributes() - 1);
		// currentRds.setArffFilename(arffFilename);
		// fileReader.close();
		//
		// RoughDecisionSystem ds = currentRds.normalize();
		// messageDetail += "\r\nThe number of condition attributes: "
		// + (ds.numAttributes() - 1);
		// messageDetail +=
		// "\r\nThe number of distinct value of each condition attribute:\r\n";
		// for (int i = 0; i < currentRds.numAttributes() - 1; i++) {
		// messageDetail += ds.numDistinctValues(i) + " ";
		// }
		// arffFilename = arffFilename.substring(0, arffFilename.length() -
		// 5);// delete
		// // ".arff"
		// arffFilename += "_norm.arff";
		// messageDetail += "\r\nThe number of decision attribute value: "
		// + ds.numClasses();
		// messageDetail += "\r\nThe number of Instances: "
		// + ds.numInstances();
		// messageDetail += "\r\nThe output file is ";
		// messageDetail += arffFilename + ".\r\n";
		// ProgressDialog.progressDialog.setMessageAndShow(messageDetail);

		int kValue = k.getValue();
		int overallAlgorithm = overallAlgorithmComboBox.getSelectedIndex();

		ProgressDialog.progressDialog
				.setMessageAndShow("Please wait for a while."
						+ "\r\nDiscreting...");

		System.out.println("Discreting numeric data into nominal data.");
		// FileReader fileReader = null;
		try {
			NumericInformationSystem discretion = new NumericInformationSystem(
					CoserProject.currentProject.currentRds);
			arffFilename = CoserProject.currentProject.currentRds
					.getArffFilename();
			messageDetail += arffFilename;
			discretion.setArffFilename(arffFilename);
			try {
				discretion.discretize(kValue, overallAlgorithm);
				// message detail
				messageDetail += "\r\nThe number of condition attributes: "
						+ (discretion.numAttributes());
				messageDetail += "\r\nThe number of distinct value of each condition attribute:\r\n";
				for (int i = 0; i < discretion.numAttributes(); i++) {
					messageDetail += discretion.numDistinctValues(i) + " ";
				}// of for
				arffFilename = arffFilename.substring(0,
						arffFilename.length() - 5);// delete
													// ".arff"
				arffFilename += "_norm.arff";
				messageDetail += "\r\nThe number of Instances: "
						+ discretion.numInstances();
				messageDetail += "\r\nThe output file is ";
				messageDetail += arffFilename + ".\r\n" + "Discrete finish.";
				ProgressDialog.progressDialog.setMessageAndShow(messageDetail);
			} catch (Exception ee) {
				ErrorDialog.errorDialog
						.setMessageAndShow("Error occurred while trying to read \'"
								+ arffFilename
								+ "\' in DiscretizationDialog.actionPerformed().\r\n"
								+ ee);
			}// Of try
		} catch (Exception e) {
			e.printStackTrace();
		}// of try

	}// Of actionPerformed

}// Of class DiscretizationDialog

