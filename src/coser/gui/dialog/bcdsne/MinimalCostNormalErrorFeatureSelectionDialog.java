package coser.gui.dialog.bcdsne;

import java.awt.*;
import java.awt.event.*;
import coser.algorithm.*;

import coser.gui.guicommon.*;
import coser.gui.others.*;
import coser.gui.dialog.common.*;

/**
 * Project: The cost-sensitive rough sets project.
 * <p>
 * Summary: Specify reduction related parameters, and obtain minimal cost
 * feature sets. The algorithm is implemented in
 * coser.datamodel.decisionsystem.BothCostsNumericDecisionSystem.
 * <p>
 * Author: <b>Fan Min, Hong Zhao</b> minfanphd@163.com <br>
 * Copyright: The source code and all documents are open and free. PLEASE keep
 * this header while revising the program. <br>
 * Organization: <a href=http://grc.fjzs.edu.cn/>Lab of Granular Computing</a>,
 * Zhangzhou Normal University, Fujian 363000, China.<br>
 * Progress: Done.<br>
 * Written time: September 5, 2011. <br>
 * Last modify time: October 20, 2012.
 */
public class MinimalCostNormalErrorFeatureSelectionDialog extends Dialog
		implements ActionListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3860622028132561717L;

	public static MinimalCostNormalErrorFeatureSelectionDialog minimalCostNormalDistributionErrorFeatureSelectionDialog = new MinimalCostNormalErrorFeatureSelectionDialog();

	/**
	 * Misclassification cost lower bound.
	 */
	private IntegerField misCostLowerBoundField;

	/**
	 * Misclassification cost upper bound.
	 */
	private IntegerField misCostUpperBoundField;

	/**
	 * Cost step length.
	 */
	private IntegerField costStepLengthField;

	/**
	 * Ratio of two misclassification costs.
	 */
	private IntegerField ratioTwoMisCostsField;

	/**
	 *************************** 
	 * The only constructor.
	 *************************** 
	 */
	private MinimalCostNormalErrorFeatureSelectionDialog() {
		// This dialog is not module
		super(GUICommon.mainFrame, "Minimal cost feature selection", true);

		misCostLowerBoundField = new IntegerField("30");
		misCostUpperBoundField = new IntegerField("200");
		costStepLengthField = new IntegerField("20");
		ratioTwoMisCostsField = new IntegerField("10");

		Panel centerPanel = new Panel();
		centerPanel.setLayout(new GridLayout(4, 2));
		centerPanel.add(new Label("Misclassification lower bound: "));
		centerPanel.add(misCostLowerBoundField);
		centerPanel.add(new Label("Misclassification upper bound: "));
		centerPanel.add(misCostUpperBoundField);
		centerPanel.add(new Label("Cost step length: "));
		centerPanel.add(costStepLengthField);
		centerPanel.add(new Label(
				"Ratio of two mis costs: (1 for unified mis cost)"));
		centerPanel.add(ratioTwoMisCostsField);
		Button okButton = new Button(" Compute ");
		okButton.addActionListener(this);
		DialogCloser dialogCloser = new DialogCloser(this);
		Button cancelButton = new Button(" Cancel ");
		cancelButton.addActionListener(dialogCloser);
		Button helpButton = new Button(" Help ");
		helpButton.setSize(20, 10);
		helpButton.addActionListener(new HelpDialog(
				"Both cost sensitive attribute reduction (exhaustive)",
				"coser/gui/dialog/bcdsne/MinimalCostReductionDialogHelp.txt"));
		Panel okPanel = new Panel();
		okPanel.add(okButton);
		okPanel.add(cancelButton);
		okPanel.add(helpButton);

		setLayout(new BorderLayout());
		add(BorderLayout.CENTER, centerPanel);
		add(BorderLayout.SOUTH, okPanel);

		setBackground(GUICommon.MY_COLOR);
		setLocation(200, 200);
		setSize(530, 260);
		addWindowListener(dialogCloser);
		setVisible(false);
	}// Of constructor

	/**
	 *************************** 
	 * Read the arff file.
	 *************************** 
	 */
	public void actionPerformed(ActionEvent ae) {
		setVisible(false);
		ProgressDialog.progressDialog
				.setMessageAndShow("Please wait for a while."
						+ "\r\nThe execution time depends on the dataset size and the number of experiments."
						+ "\r\nThe progress is shown in the console.\r\n");

		try {
			// Use another name to make statements shorter.
			// BothCostsNominalDecisionSystem currentSystem =
			// CoserProject.currentProject.currentBcNds;

			// String message = "";

			String message = "";
			int misCostLowerBound = misCostLowerBoundField.getValue();
			int misCostUpperBound = misCostUpperBoundField.getValue();
			int costStepLength = costStepLengthField.getValue();
			int ratioTwoMisCost = ratioTwoMisCostsField.getValue();
			message = Reduction.batchMinimalCostNormalErrorFeatureSelection(
					misCostLowerBound, misCostUpperBound, costStepLength,
					ratioTwoMisCost);

			message = "Generated by Coser http://grc.fjzs.edu.cn/~fmin, minfanphd@163.com\r\n"
					+ message;
			ProgressDialog.progressDialog.setMessageAndShow(message);
			// System.out.println(tempDecisionSystem);
		} catch (Exception ee) {
			ErrorDialog.errorDialog.setMessageAndShow(ee.toString());
			ProgressDialog.progressDialog.setVisible(false);
			return;
		}// Of try
			// ProgressDialog.progressDialog.setVisible(false);
	}// Of actionPerformed

}// Of class MinimalCostReductionDialog

