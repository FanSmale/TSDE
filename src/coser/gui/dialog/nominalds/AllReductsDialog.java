package coser.gui.dialog.nominalds;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import coser.datamodel.decisionsystem.*;
import coser.project.*;
import coser.gui.guicommon.*;
import coser.gui.dialog.common.*;

/**
 * Project: The cost-sensitive rough sets project.
 * <p>
 * Summary: Specify reduction related parameters, and obtain sub-minimal test
 * cost attribute reducts. The algorithm is implemented in
 * coser.datamodel.decisionsystem.TestCostNominalDecisionSystem.
 * <p>
 * Author: <b>Fan Min</b> minfanphd@163.com <br>
 * Copyright: The source code and all documents are open and free. PLEASE keep
 * this header while revising the program. <br>
 * Organization: <a href=http://grc.fjzs.edu.cn/>Lab of Granular Computing</a>,
 * Zhangzhou Normal University, Fujian 363000, China.<br>
 * Progress: Done.<br>
 * Written time: April 27, 2011. <br>
 * Last modify time: May 3, 2011.
 */
public class AllReductsDialog extends Dialog implements ActionListener {

	/**
	 * Compute all reducts.
	 */
	private static final long serialVersionUID = -7564841659712831431L;

	/**
	 * The only object for this class.
	 */
	public static AllReductsDialog allReductsDialog = new AllReductsDialog();

	/**
	 * Algorithms.
	 */
	private JComboBox<String> algorithmComboBox;

	/**
	 * Metrics.
	 */
	private JComboBox<String> measureesComboBox;

	/**
	 *************************** 
	 * The only constructor.
	 *************************** 
	 */
	private AllReductsDialog() {
		// This dialog is not module
		super(GUICommon.mainFrame, "Attribute reduction for all reducts", true);

		String[] algorithms = { "Exponential", "Backtrack" };
		algorithmComboBox = new JComboBox<String>(algorithms);
		algorithmComboBox.setSelectedIndex(1);

		String[] measurees = { "Positive region", "Conditional entropy",
				"Majority" };
		measureesComboBox = new JComboBox<String>(measurees);
		measureesComboBox.setSelectedIndex(1);

		Panel centerPanel = new Panel();
		centerPanel.setLayout(new GridLayout(2, 2));
		centerPanel.add(new Label("Algorithm: "));
		centerPanel.add(algorithmComboBox);
		centerPanel.add(new Label("Metrics: "));
		centerPanel.add(measureesComboBox);

		Button okButton = new Button(" Compute ");
		okButton.addActionListener(this);
		DialogCloser dialogCloser = new DialogCloser(this);
		Button cancelButton = new Button(" Cancel ");
		cancelButton.addActionListener(dialogCloser);
		Button helpButton = new Button(" Help ");
		helpButton.setSize(20, 10);
		helpButton.addActionListener(new HelpDialog(
				"Attribute reduction for all reducts",
				"coser/gui/dialog/nominalds/AllReductsDialogHelp.txt"));
		Panel okPanel = new Panel();
		okPanel.add(okButton);
		okPanel.add(cancelButton);
		okPanel.add(helpButton);

		setLayout(new BorderLayout());
		add(BorderLayout.CENTER, centerPanel);
		add(BorderLayout.SOUTH, okPanel);

		setBackground(GUICommon.MY_COLOR);
		setLocation(200, 200);
		setSize(530, 200);
		addWindowListener(dialogCloser);
		setVisible(false);
	}// Of constructor

	/**
	 *************************** 
	 * Read the arff file.
	 *************************** 
	 */
	public void actionPerformed(ActionEvent ae) {
		setVisible(false);
		ProgressDialog.progressDialog
				.setMessageAndShow("Please wait for a while."
						+ "\r\nThe execution time depends on the dataset size and the number of experiments."
						+ "\r\nThe progress is shown in the console.\r\n");

		try {
			// Use another name to make statements shorter.
			NominalDecisionSystem currentSystem = CoserProject.currentProject.currentNds;

			// String message = "";

			int algorithm = algorithmComboBox.getSelectedIndex();
			int measures = measureesComboBox.getSelectedIndex();
			currentSystem.setMeasure(measures);

			boolean[][] allReducts = currentSystem
					.computeAllReductsExhaustive(algorithm);
			// System.out.println("All reducts computed: " + allReducts);

			String message = "" + allReducts.length + "\r\n";
			String currentReductString = "";

			for (int i = 0; i < allReducts.length; i++) {
				currentReductString = "";
				for (int j = 0; j < allReducts[0].length; j++) {
					if (allReducts[i][j]) {
						currentReductString += j + ", ";
					}// Of if
				}// Of for
				currentReductString = currentReductString.substring(0,
						currentReductString.length() - 2);
				message += currentReductString + "\r\n";
			}// Of for
				// System.out.println("All reducts string produced.");

			message = "Generated by Coser http://grc.fjzs.edu.cn, minfanphd@163.com\r\n"
					+ currentSystem.getRunTimeInformation()
					+ "\r\nReducts:\r\n" + message;
			ProgressDialog.progressDialog.setMessageAndShow(message);
			// System.out.println(tempDecisionSystem);
		} catch (Exception ee) {
			ErrorDialog.errorDialog.setMessageAndShow(ee.toString());
			ProgressDialog.progressDialog.setVisible(false);
			return;
		}// Of try
			// ProgressDialog.progressDialog.setVisible(false);
	}// Of actionPerformed

}// Of class AllReductsDialog

