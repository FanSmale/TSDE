package coser.gui.dialog.tcdsfn;

import java.awt.*;
import java.awt.event.*;

import coser.common.*;
import coser.datamodel.decisionsystem.*;
import coser.project.*;

import coser.gui.guicommon.*;
import coser.gui.others.*;
import coser.gui.dialog.common.*;

/**
 * Project: The cost-sensitive rough sets project.
 * <p>
 * Summary: Specify reduction related parameters, and obtain sub-minimal test
 * cost attribute reducts. The algorithm is implemented in
 * coser.datamodel.decisionsystem.TestCostSensitiveDecisionSystem.
 * <p>
 * Author: <b>Shujiao Liao</b> sjliao2011@163.com<br>
 * Copyright: The source code and all documents are open and free. PLEASE keep
 * this header while revising the program. <br>
 * Organizaion: <a href=http://grc.fjzs.edu.cn/>Lab of Granular Computing</a>,
 * Zhangzhou Normal University, Fujian 363000, China.<br>
 * Progress: Done.<br>
 * Written time: March 12, 2011. <br>
 * Last modify time: April 27, 2011.
 */
public class OptimalReductFNBkDialog extends Dialog implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 6272418854662964385L;

	public static OptimalReductFNBkDialog optimalReductFNBkDialog = new OptimalReductFNBkDialog();

	/**
	 * The delta.
	 */
	private DoubleField deltaField;

	/**
	 *************************** 
	 * The only constructor.
	 *************************** 
	 */
	private OptimalReductFNBkDialog() {
		// This dialog is not module
		super(GUICommon.mainFrame, "Optimal reduct FN-BK", true);

		deltaField = new DoubleField("0.005");
		Panel centerPanel = new Panel();
		centerPanel.setLayout(new GridLayout(1, 2));
		centerPanel.add(new Label("Delta: "));
		centerPanel.add(deltaField);

		Button okButton = new Button(" Compute ");
		okButton.addActionListener(this);
		DialogCloser dialogCloser = new DialogCloser(this);
		Button cancelButton = new Button(" Cancel ");
		cancelButton.addActionListener(dialogCloser);
		Panel okPanel = new Panel();
		okPanel.add(okButton);
		okPanel.add(cancelButton);

		setLayout(new BorderLayout());
		add(BorderLayout.CENTER, centerPanel);
		add(BorderLayout.SOUTH, okPanel);

		setBackground(GUICommon.MY_COLOR);
		setLocation(200, 200);
		setSize(230, 100);
		addWindowListener(dialogCloser);
		setVisible(false);
	}// Of constructor

	/**
	 *************************** 
	 * Show the results.
	 *************************** 
	 */
	public void actionPerformed(ActionEvent ae) {
		setVisible(false);

		try {
			// Use another name to make statements shorter.
			TestCostDecisionSystemFixedNeighborhood currentSystem = CoserProject.currentProject.currentTcDsFn;

			String message = "Generated by Coser http://grc.fjzs.edu.cn/~fmin, sjliao2011@163.com";

			double delta = Double.parseDouble(deltaField.getText().trim());
			currentSystem.setDelta(delta);
			// System.out.println("delta: " + currentSystem.getDelta());
			message += "\r\ndelta = " + delta;
			// System.out.println("individualTestCostArray: "
			// + currentSystem.getIndividualTestCostArray());
			message += "\r\nThe test cost array is: "
					+ SimpleTool.intArrayToString(
							currentSystem.getIndividualTestCostArray(), ',');

			message += "\r\nReducing...";
			ProgressDialog.progressDialog.setMessageAndShow(message);
			double optimalTestCost = 0;
			boolean[] optimalReduct = null;

			optimalTestCost = currentSystem
					.computeOptimalReductTestCostFNBacktrack();
			optimalReduct = currentSystem.getOptimalReduct();

			if (optimalReduct == null)
				ProgressDialog.progressDialog
						.appendMessage("\r\nThe optimal reduct doesn't exist, "
								+ "and the sum of test cost is "
								+ currentSystem.sumOfTestCostArray() + ".\r\n");
			else
				ProgressDialog.progressDialog
						.appendMessage("\r\n"
								+ SimpleTool
										.booleanArrayToAttributeSetString(optimalReduct)
								+ " is the optimal reduct with cost "
								+ optimalTestCost + ".\r\nDone.\r\n"); // of if
		} catch (Exception ee) {
			ErrorDialog.errorDialog.setMessageAndShow(ee.toString());
			ProgressDialog.progressDialog.setVisible(false);
			return;
		}// Of try
	}// Of actionPerformed

}// Of class OptimalReductFnBkDialog

